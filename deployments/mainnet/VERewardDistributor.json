{
  "address": "0x7C10183C11feb5af6c9762b026509a0997e36F7E",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_vault",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_ve",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "veSupply",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "block",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        }
      ],
      "name": "AddReward",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "rewardId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        }
      ],
      "name": "Claim",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "rewardId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        }
      ],
      "name": "Withdraw",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "blockNumber",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        }
      ],
      "name": "addReward",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "amountClaimed",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "rewardId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        }
      ],
      "name": "claim",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "rewards",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "veSupply",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "block",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amountClaimed",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "withdrawn",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "rewardsLength",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "vault",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ve",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "rewardId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0xb808be354532c7adfc316de9718e541b43e19ae0d2a225dad1a7fe37319dd129",
  "receipt": {
    "to": null,
    "from": "0x5b8C253517b6Bd003369173109693B01cb6841B5",
    "contractAddress": "0x7C10183C11feb5af6c9762b026509a0997e36F7E",
    "transactionIndex": 350,
    "gasUsed": "797417",
    "logsBloom": "0x00000000000008000100000000000000000000800000000000900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000020000000000000000000800000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000000000",
    "blockHash": "0x88da5e0b9e313c90f8a74d32d1178dbb5a9b5431b7a340a1c7169a721c359252",
    "transactionHash": "0xb808be354532c7adfc316de9718e541b43e19ae0d2a225dad1a7fe37319dd129",
    "logs": [
      {
        "transactionIndex": 350,
        "blockNumber": 15002352,
        "transactionHash": "0xb808be354532c7adfc316de9718e541b43e19ae0d2a225dad1a7fe37319dd129",
        "address": "0x7C10183C11feb5af6c9762b026509a0997e36F7E",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x0000000000000000000000005b8c253517b6bd003369173109693b01cb6841b5"
        ],
        "data": "0x",
        "logIndex": 666,
        "blockHash": "0x88da5e0b9e313c90f8a74d32d1178dbb5a9b5431b7a340a1c7169a721c359252"
      }
    ],
    "blockNumber": 15002352,
    "cumulativeGasUsed": "24650417",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x293Ae5226D3Bda6969348D8b211A73Ad7Cafb7Ea",
    "0x77D3d884FeA1E389150a26D4569b20ebA284A86d"
  ],
  "solcInputHash": "8c1583da59eca0eabb4ff9f0030061cc",
  "metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_vault\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_ve\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"veSupply\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"block\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"AddReward\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"rewardId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"Claim\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"rewardId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"addReward\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"amountClaimed\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"rewardId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"rewards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"veSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"block\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountClaimed\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"withdrawn\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardsLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vault\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ve\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"rewardId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/VERewardDistributor.sol\":\"VERewardDistributor\"},\"evmVersion\":\"london\",\"libraries\":{\":__CACHE_BREAKER__\":\"0x00000000d41867734bbee4c6863d9255b2b06ac1\"},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@levxdao/ve/contracts/interfaces/IVotingEscrow.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity ^0.8.0;\\n\\ninterface IVotingEscrow {\\n    event SetMigrator(address indexed account);\\n    event SetDelegate(address indexed account, bool isDelegate);\\n    event Deposit(\\n        address indexed provider,\\n        uint256 value,\\n        uint256 discount,\\n        uint256 indexed unlockTime,\\n        int128 indexed _type,\\n        uint256 ts\\n    );\\n    event Cancel(address indexed provider, uint256 value, uint256 discount, uint256 penaltyRate, uint256 ts);\\n    event Withdraw(address indexed provider, uint256 value, uint256 discount, uint256 ts);\\n    event Migrate(address indexed provider, uint256 value, uint256 discount, uint256 ts);\\n    event Supply(uint256 prevSupply, uint256 supply);\\n\\n    function interval() external view returns (uint256);\\n\\n    function maxDuration() external view returns (uint256);\\n\\n    function token() external view returns (address);\\n\\n    function name() external view returns (string memory);\\n\\n    function symbol() external view returns (string memory);\\n\\n    function decimals() external view returns (uint8);\\n\\n    function migrator() external view returns (address);\\n\\n    function isDelegate(address account) external view returns (bool);\\n\\n    function supply() external view returns (uint256);\\n\\n    function migrated(address account) external view returns (bool);\\n\\n    function delegateAt(address account, uint256 index) external view returns (address);\\n\\n    function locked(address account)\\n        external\\n        view\\n        returns (\\n            int128 amount,\\n            int128 discount,\\n            uint256 start,\\n            uint256 end\\n        );\\n\\n    function epoch() external view returns (uint256);\\n\\n    function pointHistory(uint256 epoch)\\n        external\\n        view\\n        returns (\\n            int128 bias,\\n            int128 slope,\\n            uint256 ts,\\n            uint256 blk\\n        );\\n\\n    function userPointHistory(address account, uint256 epoch)\\n        external\\n        view\\n        returns (\\n            int128 bias,\\n            int128 slope,\\n            uint256 ts,\\n            uint256 blk\\n        );\\n\\n    function userPointEpoch(address account) external view returns (uint256);\\n\\n    function slopeChanges(uint256 epoch) external view returns (int128);\\n\\n    function delegateLength(address addr) external view returns (uint256);\\n\\n    function getLastUserSlope(address addr) external view returns (int128);\\n\\n    function getCheckpointTime(address _addr, uint256 _idx) external view returns (uint256);\\n\\n    function unlockTime(address _addr) external view returns (uint256);\\n\\n    function setMigrator(address _migrator) external;\\n\\n    function setDelegate(address account, bool _isDelegate) external;\\n\\n    function checkpoint() external;\\n\\n    function depositFor(address _addr, uint256 _value) external;\\n\\n    function createLockFor(\\n        address _addr,\\n        uint256 _value,\\n        uint256 _discount,\\n        uint256 _duration\\n    ) external;\\n\\n    function createLock(uint256 _value, uint256 _duration) external;\\n\\n    function increaseAmountFor(\\n        address _addr,\\n        uint256 _value,\\n        uint256 _discount\\n    ) external;\\n\\n    function increaseAmount(uint256 _value) external;\\n\\n    function increaseUnlockTime(uint256 _duration) external;\\n\\n    function cancel() external;\\n\\n    function withdraw() external;\\n\\n    function migrate() external;\\n\\n    function balanceOf(address addr) external view returns (uint256);\\n\\n    function balanceOf(address addr, uint256 _t) external view returns (uint256);\\n\\n    function balanceOfAt(address addr, uint256 _block) external view returns (uint256);\\n\\n    function totalSupply() external view returns (uint256);\\n\\n    function totalSupply(uint256 t) external view returns (uint256);\\n\\n    function totalSupplyAt(uint256 _block) external view returns (uint256);\\n}\\n\",\"keccak256\":\"0x3ac00d3de6b34a0c5cb777b5e9477af3982061f7e9021848dc662508f1cf0f1b\",\"license\":\"UNLICENSED\"},\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"contracts/VERewardDistributor.sol\":{\"content\":\"// SPDX-License-Identifier: WTFPL\\n\\npragma solidity ^0.8.13;\\n\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\nimport \\\"@levxdao/ve/contracts/interfaces/IVotingEscrow.sol\\\";\\nimport \\\"./interfaces/IETHVault.sol\\\";\\n\\ncontract VERewardDistributor is Ownable {\\n    struct Reward {\\n        uint256 amount;\\n        uint256 veSupply;\\n        uint256 block;\\n        uint256 deadline;\\n        uint256 amountClaimed;\\n        bool withdrawn;\\n    }\\n\\n    address public immutable vault;\\n    address public immutable ve;\\n\\n    Reward[] public rewards;\\n    mapping(uint256 => mapping(address => uint256)) public amountClaimed;\\n\\n    event AddReward(uint256 amount, uint256 veSupply, uint256 block, uint256 deadline);\\n    event Withdraw(uint256 indexed rewardId, uint256 amount, address recipient);\\n    event Claim(uint256 indexed rewardId, address indexed account, uint256 amount, address recipient);\\n\\n    constructor(address _vault, address _ve) {\\n        vault = _vault;\\n        ve = _ve;\\n    }\\n\\n    function rewardsLength() external view returns (uint256) {\\n        return rewards.length;\\n    }\\n\\n    function addReward(\\n        uint256 amount,\\n        uint256 blockNumber,\\n        uint256 deadline\\n    ) external onlyOwner {\\n        require(amount > 0, \\\"VERD: INVALID_REWARD_ID\\\");\\n        require(blockNumber <= block.number, \\\"VERD: INVALID_BLOCK_NUMBER\\\");\\n        require(deadline > block.number, \\\"VERD: INVALID_DEADLINE\\\");\\n\\n        IETHVault(vault).withdraw(amount, address(this));\\n\\n        uint256 veSupply = IVotingEscrow(ve).totalSupplyAt(blockNumber);\\n        rewards.push(Reward(amount, veSupply, blockNumber, deadline, 0, false));\\n\\n        emit AddReward(amount, veSupply, blockNumber, deadline);\\n    }\\n\\n    function withdraw(uint256 rewardId, address recipient) external onlyOwner {\\n        Reward storage reward = rewards[rewardId];\\n        require(!reward.withdrawn, \\\"VERD: WITHDRAWN\\\");\\n        require(reward.deadline <= block.timestamp, \\\"VERD: NOT_EXPIRED\\\");\\n\\n        reward.withdrawn = true;\\n\\n        uint256 amount = reward.amount - reward.amountClaimed;\\n        emit Withdraw(rewardId, amount, recipient);\\n        payable(recipient).transfer(amount);\\n    }\\n\\n    function claim(uint256 rewardId, address recipient) external {\\n        require(amountClaimed[rewardId][msg.sender] == 0, \\\"VERD: CLAIMED\\\");\\n\\n        Reward storage reward = rewards[rewardId];\\n        require(block.timestamp < reward.deadline, \\\"VERD: EXPIRED\\\");\\n\\n        uint256 _block = reward.block;\\n        uint256 balance = IVotingEscrow(ve).balanceOfAt(msg.sender, _block);\\n        require(balance > 0, \\\"VERD: INSUFFICIENT_BALANCE\\\");\\n\\n        uint256 amount = (balance * reward.amount) / reward.veSupply;\\n        reward.amountClaimed += amount;\\n        amountClaimed[rewardId][msg.sender] = amount;\\n\\n        if (recipient == address(0)) recipient = msg.sender;\\n        emit Claim(rewardId, msg.sender, amount, recipient);\\n        payable(recipient).transfer(amount);\\n    }\\n}\\n\",\"keccak256\":\"0x02d7641095a69ac66cabf9eff9b317cc6988552cbb8a9bd738ca302dd59f1d26\",\"license\":\"WTFPL\"},\"contracts/interfaces/IETHVault.sol\":{\"content\":\"// SPDX-License-Identifier: WTFPL\\n\\npragma solidity >=0.5.0;\\n\\ninterface IETHVault {\\n    event Receive(address indexed sender, uint256 amount);\\n    event SetOperator(address indexed account, bool isOperator);\\n    event Withdraw(address indexed operator, uint256 amount, address to);\\n\\n    function isOperator(address account) external view returns (bool);\\n\\n    function setOperator(address account, bool _isOperator) external;\\n\\n    function withdraw(uint256 amount, address to) external;\\n}\\n\",\"keccak256\":\"0x278e06a7a5879b4935e13f006b3103622dcd11af36bfce9c9917970d8d3a43f8\",\"license\":\"WTFPL\"}},\"version\":1}",
  "bytecode": "0x60c060405234801561001057600080fd5b50604051610e21380380610e2183398101604081905261002f916100bb565b6100383361004f565b6001600160a01b039182166080521660a0526100ee565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80516001600160a01b03811681146100b657600080fd5b919050565b600080604083850312156100ce57600080fd5b6100d78361009f565b91506100e56020840161009f565b90509250929050565b60805160a051610cfa6101276000396000818160c70152818161053501526108460152600081816101dc01526104ba0152610cfa6000f3fe608060405234801561001057600080fd5b50600436106100a85760003560e01c8063bbb356d511610071578063bbb356d514610132578063bbda7a6014610144578063ddd5e1b21461016f578063f2fde38b14610182578063f301af4214610195578063fbfa77cf146101d757600080fd5b8062f714ce146100ad5780631f850716146100c25780634681629014610106578063715018a6146101195780638da5cb5b14610121575b600080fd5b6100c06100bb366004610b47565b6101fe565b005b6100e97f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020015b60405180910390f35b6100c0610114366004610b73565b61038d565b6100c061072d565b6000546001600160a01b03166100e9565b6001545b6040519081526020016100fd565b610136610152366004610b47565b600260209081526000928352604080842090915290825290205481565b6100c061017d366004610b47565b610763565b6100c0610190366004610b9f565b6109f7565b6101a86101a3366004610bc1565b610a92565b6040805196875260208701959095529385019290925260608401526080830152151560a082015260c0016100fd565b6100e97f000000000000000000000000000000000000000000000000000000000000000081565b6000546001600160a01b031633146102315760405162461bcd60e51b815260040161022890610bda565b60405180910390fd5b60006001838154811061024657610246610c0f565b60009182526020909120600690910201600581015490915060ff16156102a05760405162461bcd60e51b815260206004820152600f60248201526e2b22a9221d102ba4aa24222920aba760891b6044820152606401610228565b42816003015411156102e85760405162461bcd60e51b8152602060048201526011602482015270159154910e881393d517d1561412549151607a1b6044820152606401610228565b60058101805460ff191660011790556004810154815460009161030a91610c3b565b604080518281526001600160a01b038616602082015291925085917f71ef96c43343734b1d843bb85d52ef329f5e9143e4d35827771e3b0dd90c5f84910160405180910390a26040516001600160a01b0384169082156108fc029083906000818181858888f19350505050158015610386573d6000803e3d6000fd5b5050505050565b6000546001600160a01b031633146103b75760405162461bcd60e51b815260040161022890610bda565b600083116104075760405162461bcd60e51b815260206004820152601760248201527f564552443a20494e56414c49445f5245574152445f49440000000000000000006044820152606401610228565b438211156104575760405162461bcd60e51b815260206004820152601a60248201527f564552443a20494e56414c49445f424c4f434b5f4e554d4245520000000000006044820152606401610228565b43811161049f5760405162461bcd60e51b8152602060048201526016602482015275564552443a20494e56414c49445f444541444c494e4560501b6044820152606401610228565b604051627b8a6760e11b8152600481018490523060248201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169062f714ce90604401600060405180830381600087803b15801561050557600080fd5b505af1158015610519573d6000803e3d6000fd5b5050604051630981b24d60e41b815260048101859052600092507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316915063981b24d090602401602060405180830381865afa158015610585573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105a99190610c52565b6040805160c081018252868152602080820184815282840188815260608085018981526000608080880182815260a08901838152600180548082018255945298517fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf660069094029384015595517fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf783015593517fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf882015590517fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf982015592517fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cfa84015593517fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cfb909201805460ff19169215159290921790915583518981529182018590529281018790529081018590529192507f5366c260fb219f5c81d5998050c11c745fcb7b2e4e6afcf51ac9e3e7bf4f697e910160405180910390a150505050565b6000546001600160a01b031633146107575760405162461bcd60e51b815260040161022890610bda565b6107616000610adb565b565b6000828152600260209081526040808320338452909152902054156107ba5760405162461bcd60e51b815260206004820152600d60248201526c159154910e8810d31052535151609a1b6044820152606401610228565b6000600183815481106107cf576107cf610c0f565b90600052602060002090600602019050806003015442106108225760405162461bcd60e51b815260206004820152600d60248201526c159154910e8811561412549151609a1b6044820152606401610228565b600281015460405163277166bf60e11b8152336004820152602481018290526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690634ee2cd7e90604401602060405180830381865afa158015610895573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108b99190610c52565b90506000811161090b5760405162461bcd60e51b815260206004820152601a60248201527f564552443a20494e53554646494349454e545f42414c414e43450000000000006044820152606401610228565b60018301548354600091906109209084610c6b565b61092a9190610c8a565b9050808460040160008282546109409190610cac565b9091555050600086815260026020908152604080832033845290915290208190556001600160a01b038516610973573394505b604080518281526001600160a01b0387166020820152339188917fb3e541dfcecf12a9a49633b6f58c2ea1a09b9fa7ea6ac95f2e3ca38fcdfc49ab910160405180910390a36040516001600160a01b0386169082156108fc029083906000818181858888f193505050501580156109ee573d6000803e3d6000fd5b50505050505050565b6000546001600160a01b03163314610a215760405162461bcd60e51b815260040161022890610bda565b6001600160a01b038116610a865760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610228565b610a8f81610adb565b50565b60018181548110610aa257600080fd5b60009182526020909120600690910201805460018201546002830154600384015460048501546005909501549395509193909260ff1686565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80356001600160a01b0381168114610b4257600080fd5b919050565b60008060408385031215610b5a57600080fd5b82359150610b6a60208401610b2b565b90509250929050565b600080600060608486031215610b8857600080fd5b505081359360208301359350604090920135919050565b600060208284031215610bb157600080fd5b610bba82610b2b565b9392505050565b600060208284031215610bd357600080fd5b5035919050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600082821015610c4d57610c4d610c25565b500390565b600060208284031215610c6457600080fd5b5051919050565b6000816000190483118215151615610c8557610c85610c25565b500290565b600082610ca757634e487b7160e01b600052601260045260246000fd5b500490565b60008219821115610cbf57610cbf610c25565b50019056fea26469706673582212204072e69c498535ab8e093a6250193d91a7c55c3482a65d2e0b6f18aa09e2af4a64736f6c634300080d0033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100a85760003560e01c8063bbb356d511610071578063bbb356d514610132578063bbda7a6014610144578063ddd5e1b21461016f578063f2fde38b14610182578063f301af4214610195578063fbfa77cf146101d757600080fd5b8062f714ce146100ad5780631f850716146100c25780634681629014610106578063715018a6146101195780638da5cb5b14610121575b600080fd5b6100c06100bb366004610b47565b6101fe565b005b6100e97f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020015b60405180910390f35b6100c0610114366004610b73565b61038d565b6100c061072d565b6000546001600160a01b03166100e9565b6001545b6040519081526020016100fd565b610136610152366004610b47565b600260209081526000928352604080842090915290825290205481565b6100c061017d366004610b47565b610763565b6100c0610190366004610b9f565b6109f7565b6101a86101a3366004610bc1565b610a92565b6040805196875260208701959095529385019290925260608401526080830152151560a082015260c0016100fd565b6100e97f000000000000000000000000000000000000000000000000000000000000000081565b6000546001600160a01b031633146102315760405162461bcd60e51b815260040161022890610bda565b60405180910390fd5b60006001838154811061024657610246610c0f565b60009182526020909120600690910201600581015490915060ff16156102a05760405162461bcd60e51b815260206004820152600f60248201526e2b22a9221d102ba4aa24222920aba760891b6044820152606401610228565b42816003015411156102e85760405162461bcd60e51b8152602060048201526011602482015270159154910e881393d517d1561412549151607a1b6044820152606401610228565b60058101805460ff191660011790556004810154815460009161030a91610c3b565b604080518281526001600160a01b038616602082015291925085917f71ef96c43343734b1d843bb85d52ef329f5e9143e4d35827771e3b0dd90c5f84910160405180910390a26040516001600160a01b0384169082156108fc029083906000818181858888f19350505050158015610386573d6000803e3d6000fd5b5050505050565b6000546001600160a01b031633146103b75760405162461bcd60e51b815260040161022890610bda565b600083116104075760405162461bcd60e51b815260206004820152601760248201527f564552443a20494e56414c49445f5245574152445f49440000000000000000006044820152606401610228565b438211156104575760405162461bcd60e51b815260206004820152601a60248201527f564552443a20494e56414c49445f424c4f434b5f4e554d4245520000000000006044820152606401610228565b43811161049f5760405162461bcd60e51b8152602060048201526016602482015275564552443a20494e56414c49445f444541444c494e4560501b6044820152606401610228565b604051627b8a6760e11b8152600481018490523060248201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169062f714ce90604401600060405180830381600087803b15801561050557600080fd5b505af1158015610519573d6000803e3d6000fd5b5050604051630981b24d60e41b815260048101859052600092507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316915063981b24d090602401602060405180830381865afa158015610585573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105a99190610c52565b6040805160c081018252868152602080820184815282840188815260608085018981526000608080880182815260a08901838152600180548082018255945298517fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf660069094029384015595517fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf783015593517fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf882015590517fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf982015592517fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cfa84015593517fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cfb909201805460ff19169215159290921790915583518981529182018590529281018790529081018590529192507f5366c260fb219f5c81d5998050c11c745fcb7b2e4e6afcf51ac9e3e7bf4f697e910160405180910390a150505050565b6000546001600160a01b031633146107575760405162461bcd60e51b815260040161022890610bda565b6107616000610adb565b565b6000828152600260209081526040808320338452909152902054156107ba5760405162461bcd60e51b815260206004820152600d60248201526c159154910e8810d31052535151609a1b6044820152606401610228565b6000600183815481106107cf576107cf610c0f565b90600052602060002090600602019050806003015442106108225760405162461bcd60e51b815260206004820152600d60248201526c159154910e8811561412549151609a1b6044820152606401610228565b600281015460405163277166bf60e11b8152336004820152602481018290526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690634ee2cd7e90604401602060405180830381865afa158015610895573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108b99190610c52565b90506000811161090b5760405162461bcd60e51b815260206004820152601a60248201527f564552443a20494e53554646494349454e545f42414c414e43450000000000006044820152606401610228565b60018301548354600091906109209084610c6b565b61092a9190610c8a565b9050808460040160008282546109409190610cac565b9091555050600086815260026020908152604080832033845290915290208190556001600160a01b038516610973573394505b604080518281526001600160a01b0387166020820152339188917fb3e541dfcecf12a9a49633b6f58c2ea1a09b9fa7ea6ac95f2e3ca38fcdfc49ab910160405180910390a36040516001600160a01b0386169082156108fc029083906000818181858888f193505050501580156109ee573d6000803e3d6000fd5b50505050505050565b6000546001600160a01b03163314610a215760405162461bcd60e51b815260040161022890610bda565b6001600160a01b038116610a865760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610228565b610a8f81610adb565b50565b60018181548110610aa257600080fd5b60009182526020909120600690910201805460018201546002830154600384015460048501546005909501549395509193909260ff1686565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80356001600160a01b0381168114610b4257600080fd5b919050565b60008060408385031215610b5a57600080fd5b82359150610b6a60208401610b2b565b90509250929050565b600080600060608486031215610b8857600080fd5b505081359360208301359350604090920135919050565b600060208284031215610bb157600080fd5b610bba82610b2b565b9392505050565b600060208284031215610bd357600080fd5b5035919050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600082821015610c4d57610c4d610c25565b500390565b600060208284031215610c6457600080fd5b5051919050565b6000816000190483118215151615610c8557610c85610c25565b500290565b600082610ca757634e487b7160e01b600052601260045260246000fd5b500490565b60008219821115610cbf57610cbf610c25565b50019056fea26469706673582212204072e69c498535ab8e093a6250193d91a7c55c3482a65d2e0b6f18aa09e2af4a64736f6c634300080d0033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 337,
        "contract": "contracts/VERewardDistributor.sol:VERewardDistributor",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 2652,
        "contract": "contracts/VERewardDistributor.sol:VERewardDistributor",
        "label": "rewards",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_struct(Reward)2644_storage)dyn_storage"
      },
      {
        "astId": 2658,
        "contract": "contracts/VERewardDistributor.sol:VERewardDistributor",
        "label": "amountClaimed",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_struct(Reward)2644_storage)dyn_storage": {
        "base": "t_struct(Reward)2644_storage",
        "encoding": "dynamic_array",
        "label": "struct VERewardDistributor.Reward[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => mapping(address => uint256))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_address,t_uint256)"
      },
      "t_struct(Reward)2644_storage": {
        "encoding": "inplace",
        "label": "struct VERewardDistributor.Reward",
        "members": [
          {
            "astId": 2633,
            "contract": "contracts/VERewardDistributor.sol:VERewardDistributor",
            "label": "amount",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 2635,
            "contract": "contracts/VERewardDistributor.sol:VERewardDistributor",
            "label": "veSupply",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 2637,
            "contract": "contracts/VERewardDistributor.sol:VERewardDistributor",
            "label": "block",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 2639,
            "contract": "contracts/VERewardDistributor.sol:VERewardDistributor",
            "label": "deadline",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          },
          {
            "astId": 2641,
            "contract": "contracts/VERewardDistributor.sol:VERewardDistributor",
            "label": "amountClaimed",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256"
          },
          {
            "astId": 2643,
            "contract": "contracts/VERewardDistributor.sol:VERewardDistributor",
            "label": "withdrawn",
            "offset": 0,
            "slot": "5",
            "type": "t_bool"
          }
        ],
        "numberOfBytes": "192"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}